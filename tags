!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	inc/typeA.h	/^class A{$/;"	c
A	src/typeA.cpp	/^A::A() : count(16){}$/;"	f	class:A
ARQUIVO_H_	inc/arquivo.h	11;"	d
Arquivo	inc/arquivo.h	/^class Arquivo{$/;"	c
Arquivo	src/arquivo.cpp	/^Arquivo::Arquivo(string nomeIn, string nomeOut):$/;"	f	class:Arquivo
BIN	makefile	/^BIN = bin$/;"	m
C	inc/typeC.h	/^class C{$/;"	c
C	src/typeC.cpp	/^C::C(){$/;"	f	class:C
FUNCTIONS_H	inc/functions.h	10;"	d
GCC	makefile	/^GCC = g++$/;"	m
OBJ	makefile	/^OBJ = obj$/;"	m
TYPEA_H_	inc/typeA.h	10;"	d
TYPEC_H_	inc/typeC.h	11;"	d
count	inc/typeA.h	/^    int count;$/;"	m	class:A
decoder	src/typeA.cpp	/^void A::decoder(Arquivo &arquivo, string instruction){$/;"	f	class:A
decoder	src/typeC.cpp	/^void C::decoder(Arquivo &arquivo, string instruction){$/;"	f	class:C
fileIn	inc/arquivo.h	/^    string fileIn, fileOut;$/;"	m	class:Arquivo
fileOut	inc/arquivo.h	/^    string fileIn, fileOut;$/;"	m	class:Arquivo
getFileIn	src/arquivo.cpp	/^string Arquivo::getFileIn(){$/;"	f	class:Arquivo
getFileOut	src/arquivo.cpp	/^string Arquivo::getFileOut(){$/;"	f	class:Arquivo
getLine	src/arquivo.cpp	/^string Arquivo::getLine(){$/;"	f	class:Arquivo
isDigit	inc/functions.h	16;"	d
isEnd	src/arquivo.cpp	/^bool Arquivo::isEnd(){$/;"	f	class:Arquivo
isTypeA	inc/functions.h	18;"	d
isTypeC	inc/functions.h	19;"	d
isTypeLabel	inc/functions.h	20;"	d
isValid	inc/functions.h	17;"	d
jmp	inc/typeC.h	/^    map<string,int> jmp;$/;"	m	class:C
main	src/main.cpp	/^int main(int argc, char *argv[])$/;"	f
myfile	inc/arquivo.h	/^    ifstream myfile;$/;"	m	class:Arquivo
outFile	inc/arquivo.h	/^    ofstream outFile;$/;"	m	class:Arquivo
pc	inc/functions.h	/^static int pc = 0;$/;"	v
rmComment	src/functions.cpp	/^void rmComment(string &line){$/;"	f
rmTab	src/functions.cpp	/^void rmTab(string &line){$/;"	f
setBit	inc/functions.h	21;"	d
values	inc/typeC.h	/^    map<string,int> values;$/;"	m	class:C
variable	inc/typeC.h	/^    map<string,int> variable;$/;"	m	class:C
variables	inc/typeA.h	/^    map<string, int> variables;$/;"	m	class:A
writeLine	src/arquivo.cpp	/^void Arquivo::writeLine(int value){$/;"	f	class:Arquivo
